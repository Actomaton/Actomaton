{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actomaton"}]},{"type":"text","text":" は Swift Concurrency を使った "},{"type":"strong","inlineContent":[{"type":"text","text":"状態と副作用の管理のためのフレームワーク"}]},{"type":"text","text":" です。"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"http:\/\/elm-lang.org\/"},{"type":"text","text":" や "},{"type":"reference","isActive":true,"identifier":"https:\/\/redux.js.org\/"},{"type":"text","text":"、"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},{"type":"text","text":" などを参考に、Swift Concurrency を用いた高度な副作用管理システムを備えています。"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Actomaton\/Actomaton"}]}]}]},{"anchor":"Actomaton-(親モジュール)","level":3,"type":"heading","text":"Actomaton (親モジュール)"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actomaton"}]},{"type":"text","text":" は Actor を用いた状態管理のコアモジュールで、Linux を含めた各種プラットフォーム上で動作します。"},{"type":"text","text":" "},{"type":"text","text":"大きく分けて、次の5つの型ないしその実装を開発者が定義することで、アプリの振る舞い（ビジネスロジック）を決定します。"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Action (入力)"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" を用いた「メッセージ」を Actomaton に送り、Reducer（ビジネスロジック）を実行する"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State (状態)"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"アプリの全体、あるいは部分的なドメインに特化した「状態」。"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" を受信後に Reducer によって状態変更が行われる。この状態を使って、ユーザーインターフェースなどシステム外部に対して表現を行う。"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Reducer (状態遷移関数)"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"アプリの全体、あるいは部分的なドメインに特化した「ビジネスロジック」。"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" を入力として受け取り、"},{"type":"codeVoice","code":"State"},{"type":"text","text":" を更新した後、 "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" を出力として発生する。"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Effect (副作用)"}]},{"type":"text","text":": "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" 受信後の Reducer の実行で発生する「副作用」"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"副作用実行の後、次のアクションを1回送信する "},{"type":"codeVoice","code":"async"},{"type":"text","text":" 関数方式と、複数回のアクションを連続送信できる "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" 方式の2パターン"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EffectID"},{"type":"text","text":" を使った（手動）キャンセル処理"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EffectQueue"},{"type":"text","text":" を使った副作用のキュー管理（自動キャンセル・自動待機など）"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Environment (外部環境)"}]},{"type":"text","text":": 実行する副作用の差し替え（モック化）を可能にする「外部環境」。これにより Actomaton は依存注入コンテナとしても機能する。"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"これらの単純なデータ構造をアプリの設計図として、"},{"type":"strong","inlineContent":[{"type":"text","text":"actor Actomaton"}]},{"type":"text","text":" を作成することができます。"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" は状態機械を使った計算モデルの１つです。その使い方として、"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"1つの "},{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" のみを用いてアプリ全体の状態を管理（"},{"type":"strong","inlineContent":[{"type":"text","text":"関数型プログラミング方式"}]},{"type":"text","text":"）"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"各ドメインごとに "},{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" を作成して複数間でメッセージパッシングする設計（"},{"type":"strong","inlineContent":[{"type":"text","text":"オブジェクト指向プログラミング方式"}]},{"type":"text","text":"）"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"など、様々な設計指針に合わせて柔軟に開発することができます。"}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"オブジェクト指向プログラミング方式"}]},{"type":"text","text":" では、 "},{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" を UI 開発における「ViewModel」に見立てて、各画面ごとに設計することができます。初級〜中級者向け。"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"関数型プログラミング方式"}]},{"type":"text","text":" では、"},{"type":"codeVoice","code":"WritableKeyPath"},{"type":"text","text":" と "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-case-paths"},{"type":"text","text":" を用いた"},{"type":"text","text":" "},{"type":"text","text":"Optics (Lens) と呼ばれる手法を使って "},{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" の代わりに "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" を画面ごとに分解し、"},{"type":"text","text":" "},{"type":"text","text":"Single Source of Truth なアプリ全体へと合成することができます。上級者向け。"}]}]}]}]},{"anchor":"ActomatonUI","level":3,"type":"heading","text":"ActomatonUI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"この "},{"type":"strong","inlineContent":[{"type":"text","text":"ActomatonUI"}]},{"type":"text","text":" モジュールでは、上述の Actomaton を SwiftUI \/ UIKit \/ AppKit 向けにラップした"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" と UI binding に便利な各種クラスを提供します。"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Store (共通)"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"}]},{"type":"text","text":": "},{"type":"codeVoice","code":"Actomaton"},{"type":"text","text":" を内部に持つ薄いラッパー"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI に対応: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"},{"type":"text","text":" に変換可能"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIKit に対応: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":"."},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/state"},{"type":"text","text":" を Combine Publisher として監視し、"},{"type":"codeVoice","code":"UIView"},{"type":"text","text":" に反映可能"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ViewStore"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"}]},{"type":"text","text":": "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" が SwiftUI "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" を行うための "},{"type":"codeVoice","code":"ObservableObject"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/WithViewStore"},{"type":"text","text":" (SwiftUI View) を使い、SwiftUI レンダリングを最適化する"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"RouteStore"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"}]},{"type":"text","text":": "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" のサブクラスで、追加の "},{"type":"codeVoice","code":"Route"},{"type":"text","text":" 外部出力（主に画面遷移ルーティング用の副作用）を持つ"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"オブジェクト指向方式で Sub-Store に分解しない場合、ルーティング用コールバックを使って、画面間のコミュニケーションを行う"}]}]}]}]}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"オブジェクト指向プログラミング方式"}]},{"type":"text","text":" では、 3. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" を中心に使います。"},{"type":"text","text":" "},{"type":"text","text":"各画面ごとに ViewModel に相当する "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" を置き、部分構造 (Sub-Store) に分解しない代わりに、"},{"type":"text","text":" "},{"type":"text","text":"ルーティング用コールバックを使って、画面間のコミュニケーションを行います。"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"関数型プログラミング方式"}]},{"type":"text","text":" では、1. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" を中心に使います。"},{"type":"text","text":" "},{"type":"text","text":"1つの Single Source of Truth な "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" を用意し、"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)"},{"type":"text","text":" 等を使って"},{"type":"text","text":" "},{"type":"text","text":"部分構造 (Sub-Store) に分解して、それらを各画面に配置します。"},{"type":"text","text":" "},{"type":"text","text":"画面間のコミュニケーションは、 "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" 合成により、UI レベルでなくビジネスロジック上で完結します。"}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"この中で簡単に始められるのは、従来の MVVM 構成に最も近い 3. の "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" です。"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" を用いたチュートリアル (for UIKit & SwiftUI) については、下記のリンクをご参照下さい。"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/OOP-Tutorial"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"実際のサンプルアプリについては、次の SwiftUI \/ UIKit Gallery アプリをご参照下さい。"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery"}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/actomatonui"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift Concurrency (async\/await、Structured Concurrency、Actor) を使った、状態と副作用の管理のためのフレームワーク。"}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ActomatonUI","title":"ActomatonUI","symbolKind":"module","role":"collection","modules":[{"name":"ActomatonUI"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/OOP-Tutorial"]},{"title":"Esssentials","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"]},{"title":"For SwiftUI binding","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"]},{"title":"For Object-Oriented Programming","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/SendRouteEnvironment"]},{"title":"UIKit View Hosting Helper","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/HostingViewController"]},{"title":"Articles","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/04-HostingViewController","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/03-RouteStore","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/01-Counter","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/05-ViewStore","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/02-LoginLogout"],"generated":true},{"title":"Structures","identifiers":["doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/CurrentValuePublisher","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/StoreConfiguration","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/WithViewStore"]}],"references":{"https://github.com/Actomaton/Actomaton-Gallery":{"title":"Actomaton-Gallery","titleInlineContent":[{"type":"text","text":"Actomaton-Gallery"}],"type":"link","identifier":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery","url":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery"},"doc://ActomatonUI/documentation/ActomatonUI/04-HostingViewController":{"role":"article","title":"4. HostingViewController","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/HostingViewController"},{"type":"text","text":" を使った "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" と SwiftUI の連携"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/04-HostingViewController","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/04-hostingviewcontroller"},"https://github.com/Actomaton/Actomaton":{"title":"https:\/\/github.com\/Actomaton\/Actomaton","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/Actomaton\/Actomaton"}],"type":"link","identifier":"https:\/\/github.com\/Actomaton\/Actomaton","url":"https:\/\/github.com\/Actomaton\/Actomaton"},"doc://ActomatonUI/documentation/ActomatonUI/CurrentValuePublisher":{"role":"symbol","title":"CurrentValuePublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentValuePublisher"}],"abstract":[{"type":"text","text":"Read-only "},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":" with sharing original value on "},{"type":"codeVoice","code":"map"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/CurrentValuePublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CurrentValuePublisher"}],"url":"\/documentation\/actomatonui\/currentvaluepublisher"},"doc://ActomatonUI/documentation/ActomatonUI/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" proxy type that can create direct (state-to-state) & indirect (state-to-action) "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/actomatonui\/viewstore"},"doc://ActomatonUI/documentation/ActomatonUI":{"role":"collection","title":"ActomatonUI","abstract":[{"type":"text","text":"Swift Concurrency (async\/await、Structured Concurrency、Actor) を使った、状態と副作用の管理のためのフレームワーク。"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui"},"doc://ActomatonUI/documentation/ActomatonUI/05-ViewStore":{"role":"article","title":"5. ViewStore","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"},{"type":"text","text":" を使った SwiftUI との連携"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/05-ViewStore","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/05-viewstore"},"doc://ActomatonUI/documentation/ActomatonUI/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"codeVoice","code":"MainActomaton"},{"type":"text","text":"-erased wrapper which can "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)"},{"type":"text","text":" into sub-store."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/actomatonui\/store"},"doc://ActomatonUI/documentation/ActomatonUI/02-LoginLogout":{"role":"article","title":"2. 認証フローの状態管理・副作用管理","abstract":[{"type":"text","text":"認証フローで行われる複雑な状態管理とその副作用管理を扱う例"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/02-LoginLogout","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/02-loginlogout"},"doc://ActomatonUI/documentation/ActomatonUI/Store/state":{"role":"symbol","title":"state","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI5StoreC5Stateq_mfp"}],"abstract":[],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/state","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/store\/state"},"https://redux.js.org/":{"title":"Redux","titleInlineContent":[{"type":"text","text":"Redux"}],"type":"link","identifier":"https:\/\/redux.js.org\/","url":"https:\/\/redux.js.org\/"},"doc://ActomatonUI/documentation/ActomatonUI/RouteStore":{"role":"symbol","title":"RouteStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteStore"}],"abstract":[{"type":"codeVoice","code":"Store"},{"type":"text","text":" wrapper that also outputs "},{"type":"codeVoice","code":"routes"},{"type":"text","text":", mainly used for UIKit’s navigation handling."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouteStore"}],"url":"\/documentation\/actomatonui\/routestore"},"http://elm-lang.org/":{"title":"Elm","titleInlineContent":[{"type":"text","text":"Elm"}],"type":"link","identifier":"http:\/\/elm-lang.org\/","url":"http:\/\/elm-lang.org\/"},"doc://ActomatonUI/documentation/ActomatonUI/OOP-Tutorial":{"role":"article","title":"RouteStore チュートリアル","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" を使った MVVM 構成の iOS アプリ開発の解説 (for UIKit & SwiftUI)"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/OOP-Tutorial","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/oop-tutorial"},"doc://ActomatonUI/documentation/ActomatonUI/Store/map(state:)":{"role":"symbol","title":"map(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SubState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI5StoreC5Stateq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC3map5stateACyxqd__q0_Gs15WritableKeyPathCyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:11ActomatonUI5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC3map5stateACyxqd__q0_Gs15WritableKeyPathCyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms "},{"type":"codeVoice","code":"<Action, State>"},{"type":"text","text":" to "},{"type":"codeVoice","code":"<Action, SubState>"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/store\/map(state:)"},"doc://ActomatonUI/documentation/ActomatonUI/03-RouteStore":{"role":"article","title":"3. RouteStore によるルーティング","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" を使って他の "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/RouteStore"},{"type":"text","text":" にメッセージングする例"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/03-RouteStore","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/03-routestore"},"doc://ActomatonUI/documentation/ActomatonUI/SendRouteEnvironment":{"role":"symbol","title":"SendRouteEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SendRouteEnvironment"}],"abstract":[{"type":"text","text":"Wrapper of original "},{"type":"codeVoice","code":"environment"},{"type":"text","text":" with attaching "},{"type":"codeVoice","code":"sendRoute"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/SendRouteEnvironment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SendRouteEnvironment"}],"url":"\/documentation\/actomatonui\/sendrouteenvironment"},"https://github.com/pointfreeco/swift-case-paths":{"title":"CasePath","titleInlineContent":[{"type":"codeVoice","code":"CasePath"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-case-paths","url":"https:\/\/github.com\/pointfreeco\/swift-case-paths"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"swift-composable-architecture","titleInlineContent":[{"type":"text","text":"swift-composable-architecture"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"doc://ActomatonUI/documentation/ActomatonUI/HostingViewController":{"role":"symbol","title":"HostingViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HostingViewController"}],"abstract":[{"type":"text","text":"SwiftUI "},{"type":"codeVoice","code":"View"},{"type":"text","text":" & "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" wrapper view controller that holds "},{"type":"codeVoice","code":"UIHostingController"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/HostingViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HostingViewController"}],"url":"\/documentation\/actomatonui\/hostingviewcontroller"},"doc://ActomatonUI/documentation/ActomatonUI/StoreConfiguration":{"role":"symbol","title":"StoreConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreConfiguration"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":" configuration for customization, e.g. "},{"type":"codeVoice","code":"logFormat"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/StoreConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreConfiguration"}],"url":"\/documentation\/actomatonui\/storeconfiguration"},"doc://ActomatonUI/documentation/ActomatonUI/WithViewStore":{"role":"symbol","title":"WithViewStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"Observable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"},{"type":"text","text":" holder view that is created from unobservable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/WithViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/actomatonui\/withviewstore"},"doc://ActomatonUI/documentation/ActomatonUI/01-Counter":{"role":"article","title":"1. シンプルなカウンター","abstract":[{"type":"codeVoice","code":"increment"},{"type":"text","text":" と "},{"type":"codeVoice","code":"decrement"},{"type":"text","text":" を行うカウンターの例"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/01-Counter","kind":"article","type":"topic","url":"\/documentation\/actomatonui\/01-counter"}}}