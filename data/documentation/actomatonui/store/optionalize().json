{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"optionalize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State_"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store","preciseIdentifier":"s:11ActomatonUI5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State_","preciseIdentifier":"s:11ActomatonUI5StoreC11optionalizeACyxqd__q0_GSgyqd__SgRs_s8SendableRd__lF6State_L_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State_"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"State_"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method can often be used alongside "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/caseMap(state:)"},{"type":"text","text":"."}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Decompositioning `store` into Screen1's sub-store, etc.","if let currentStore = store","    .map(state: \\State.currentScreen) \/\/ struct State { var currentScreen: ScreenState? }","    .optionalize()","{","    if let screen1Store = currentStore","        .caseMap(state: \/Screen.screen1) \/\/ enum ScreenState { case screen1(Screen1State) }","        .optionalize()","    {","        Screen1View(store: screen1Store) \/\/ Show Screen1 if `currentScreen = .screen1`.","    }","    else if screen2Store = currentStore","        .caseMap(state: \/Screen.screen1)","        .optionalize()","    {","        Screen2View(store: screen2Store) \/\/ Show Screen2 if `currentScreen = .screen2`.","    }","    else ...","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/actomatonui\/store\/optionalize()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/optionalize()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Transforms "},{"type":"codeVoice","code":"Store<Action, State?, Environment>"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Store<Action, State, Environment>?"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"optionalize()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"optionalize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State_"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:11ActomatonUI5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State_","preciseIdentifier":"s:11ActomatonUI5StoreC11optionalizeACyxqd__q0_GSgyqd__SgRs_s8SendableRd__lF6State_L_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">?"}],"symbolKind":"method","externalID":"s:11ActomatonUI5StoreC11optionalizeACyxqd__q0_GSgyqd__SgRs_s8SendableRd__lF","extendedModule":"ActomatonUI","modules":[{"name":"ActomatonUI"}]},"hierarchy":{"paths":[["doc:\/\/ActomatonUI\/documentation\/ActomatonUI","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"]]},"references":{"doc://ActomatonUI/documentation/ActomatonUI/Store/map(state:)":{"role":"symbol","title":"map(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SubState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI5StoreC5Stateq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC3map5stateACyxqd__q0_Gs15WritableKeyPathCyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:11ActomatonUI5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC3map5stateACyxqd__q0_Gs15WritableKeyPathCyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms "},{"type":"codeVoice","code":"<Action, State>"},{"type":"text","text":" to "},{"type":"codeVoice","code":"<Action, SubState>"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/store\/map(state:)"},"doc://ActomatonUI/documentation/ActomatonUI/Store/caseMap(state:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"caseMap(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"caseMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SubState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI5StoreC5Stateq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC7caseMap5stateACyxqd__Sgq0_G9CasePaths0G4PathVyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:11ActomatonUI5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SubState","preciseIdentifier":"s:11ActomatonUI5StoreC7caseMap5stateACyxqd__Sgq0_G9CasePaths0G4PathVyq_qd__G_ts8SendableRd__lF8SubStateL_qd__mfp"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms "},{"type":"codeVoice","code":"Store<Action, State>"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Store<Action, SubState?>"},{"type":"text","text":" using "},{"type":"codeVoice","code":"casePath"},{"type":"text","text":","}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/caseMap(state:)","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/store\/casemap(state:)"},"doc://ActomatonUI/documentation/ActomatonUI/Store/optionalize()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"optionalize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"optionalize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State_"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:11ActomatonUI5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:11ActomatonUI5StoreC6Actionxmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"State_","preciseIdentifier":"s:11ActomatonUI5StoreC11optionalizeACyxqd__q0_GSgyqd__SgRs_s8SendableRd__lF6State_L_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11ActomatonUI5StoreC11Environmentq0_mfp"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Transforms "},{"type":"codeVoice","code":"Store<Action, State?, Environment>"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Store<Action, State, Environment>?"},{"type":"text","text":"."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/optionalize()","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/store\/optionalize()"},"doc://ActomatonUI/documentation/ActomatonUI":{"role":"collection","title":"ActomatonUI","abstract":[{"type":"text","text":"Swift Concurrency (async\/await、Structured Concurrency、Actor) を使った、状態と副作用の管理のためのフレームワーク。"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui"},"doc://ActomatonUI/documentation/ActomatonUI/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"codeVoice","code":"MainActomaton"},{"type":"text","text":"-erased wrapper which can "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)"},{"type":"text","text":" into sub-store."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/actomatonui\/store"}}}