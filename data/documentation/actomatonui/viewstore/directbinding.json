{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"directBinding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI9ViewStoreC5Stateq_mfp"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/actomatonui\/viewstore\/directbinding"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore\/directBinding","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Direct 2-way state binding for SwiftUI without sending user-defined action."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"directBinding","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"directBinding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI9ViewStoreC5Stateq_mfp"},{"kind":"text","text":">"}],"symbolKind":"property","externalID":"s:11ActomatonUI9ViewStoreC13directBinding05SwiftB00F0Vyq_Gvp","extendedModule":"ActomatonUI","modules":[{"name":"ActomatonUI"}]},"hierarchy":{"paths":[["doc:\/\/ActomatonUI\/documentation\/ActomatonUI","doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore"]]},"references":{"doc://ActomatonUI/documentation/ActomatonUI/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"codeVoice","code":"MainActomaton"},{"type":"text","text":"-erased wrapper which can "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store\/map(state:)"},{"type":"text","text":" into sub-store."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/actomatonui\/store"},"doc://ActomatonUI/documentation/ActomatonUI/ViewStore/directBinding":{"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"directBinding","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"directBinding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:11ActomatonUI9ViewStoreC5Stateq_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Direct 2-way state binding for SwiftUI without sending user-defined action."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore\/directBinding","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui\/viewstore\/directbinding"},"doc://ActomatonUI/documentation/ActomatonUI/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/Store"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" proxy type that can create direct (state-to-state) & indirect (state-to-action) "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s."}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/actomatonui\/viewstore"},"doc://ActomatonUI/documentation/ActomatonUI":{"role":"collection","title":"ActomatonUI","abstract":[{"type":"text","text":"Swift Concurrency (async\/await、Structured Concurrency、Actor) を使った、状態と副作用の管理のためのフレームワーク。"}],"identifier":"doc:\/\/ActomatonUI\/documentation\/ActomatonUI","kind":"symbol","type":"topic","url":"\/documentation\/actomatonui"}}}