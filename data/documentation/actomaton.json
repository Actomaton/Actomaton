{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actomaton"}]},{"type":"text","text":" is "},{"type":"codeVoice","code":"Actor"},{"type":"text","text":"-based "},{"type":"strong","inlineContent":[{"type":"text","text":"state-machine framework"}]},{"type":"text","text":" inspired by "},{"type":"reference","isActive":true,"identifier":"http:\/\/elm-lang.org\/"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},{"type":"text","text":"."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Actomaton\/Actomaton"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This module is the heart of all the other modules, which is not only for building UI architecture"},{"type":"text","text":" "},{"type":"text","text":"but for building “any” stateful and effectful computations in any platforms (including Linux)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All the business logic and its essential types will be defined by the developers under the following categories:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Action"}]},{"type":"text","text":": "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" message to be sent to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton"},{"type":"text","text":" which triggers business logic ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Reducer"},{"type":"text","text":") to run"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State"}]},{"type":"text","text":": Representing data that is mutated by incoming "},{"type":"codeVoice","code":"Action"},{"type":"text","text":"s (e.g. for UI presentation)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Reducer"}]},{"type":"text","text":": Core business logic that receives "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" as input, mutates "},{"type":"codeVoice","code":"State"},{"type":"text","text":", and emits "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" as output using "},{"type":"codeVoice","code":"Environment"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Environment"}]},{"type":"text","text":": Collection of side-effectful entities that own external data sources and can be replaced"},{"type":"text","text":" "},{"type":"text","text":"with its mock for testing (This is the same as dependency injection (DI) container)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Effect"}]},{"type":"text","text":": Side-effect that runs after state mutation"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Single-shot "},{"type":"codeVoice","code":"async"},{"type":"text","text":" function"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Multi-shot "},{"type":"codeVoice","code":"AsyncStream"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectID"},{"type":"text","text":" cancellation and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueue"},{"type":"text","text":" Management"}]}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After these “blueprints” are created, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton"},{"type":"text","text":" can be instantiated and run as follows:"}]},{"type":"codeListing","syntax":"swift","code":["let actomaton = Actomaton<Action, State>(","  state: State(),    \/\/ initial state","  reducer: reducer,  \/\/ business logic","  environment: environment  \/\/ dependency container ",")","","await actomaton.send(Action.doSomething(parameters)) \/\/ message dispatch"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create more App-level complex structure and business logic, Actomaton provides an elegant "},{"type":"strong","inlineContent":[{"type":"text","text":"functional composition APIs"}]},{"type":"text","text":" "},{"type":"text","text":"such as "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"map"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"contramap"}]},{"type":"text","text":" for all of the above categories to transform from small structure"},{"type":"text","text":" "},{"type":"text","text":"into a large one to combine them all."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To quickly jump into the example code, see Example Code page."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Examples"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To play with real-world app using Actomaton, see SwiftUI \/ UIKit Gallery app below."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery"}]}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/actomaton"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Actomaton\/documentation\/Actomaton","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift "},{"type":"codeVoice","code":"async"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"await"},{"type":"text","text":" & "},{"type":"codeVoice","code":"Actor"},{"type":"text","text":"-powered effectful state-management framework."},{"type":"text","text":" "},{"type":"text","text":"Linux ready."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Actomaton","title":"Actomaton","symbolKind":"module","role":"collection","modules":[{"name":"Actomaton"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/Examples"]},{"title":"Esssentials","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/Actomaton","doc:\/\/Actomaton\/documentation\/Actomaton\/Reducer"]},{"title":"Effects","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/Effect","doc:\/\/Actomaton\/documentation\/Actomaton\/EffectIDProtocol","doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueueProtocol"]},{"title":"EffectQueuePolicy and built-ins","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueuePolicy","doc:\/\/Actomaton\/documentation\/Actomaton\/Newest1EffectQueueProtocol","doc:\/\/Actomaton\/documentation\/Actomaton\/Oldest1DiscardNewEffectQueueProtocol","doc:\/\/Actomaton\/documentation\/Actomaton\/Oldest1SuspendNewEffectQueueProtocol"]},{"title":"EffectID\/Queue Wrapper","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/EffectID","doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueue"]},{"title":"Articles","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/03-Timer","doc:\/\/Actomaton\/documentation\/Actomaton\/04-EffectQueue","doc:\/\/Actomaton\/documentation\/Actomaton\/05-ReducerComposition","doc:\/\/Actomaton\/documentation\/Actomaton\/02-LoginLogout","doc:\/\/Actomaton\/documentation\/Actomaton\/01-Counter"],"generated":true},{"title":"Classes","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/MainActomaton"]},{"title":"Enumerations","identifiers":["doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueueDelay"]}],"references":{"doc://Actomaton/documentation/Actomaton/02-LoginLogout":{"role":"article","title":"Example 2: Auth state","abstract":[{"type":"text","text":"Auth screen (login, logout, and force-logout) example."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/02-LoginLogout","kind":"article","type":"topic","url":"\/documentation\/actomaton\/02-loginlogout"},"https://github.com/Actomaton/Actomaton":{"title":"https:\/\/github.com\/Actomaton\/Actomaton","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/Actomaton\/Actomaton"}],"type":"link","identifier":"https:\/\/github.com\/Actomaton\/Actomaton","url":"https:\/\/github.com\/Actomaton\/Actomaton"},"http://elm-lang.org/":{"title":"Elm","titleInlineContent":[{"type":"text","text":"Elm"}],"type":"link","identifier":"http:\/\/elm-lang.org\/","url":"http:\/\/elm-lang.org\/"},"doc://Actomaton/documentation/Actomaton/EffectID":{"role":"symbol","title":"EffectID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectID"}],"abstract":[{"type":"text","text":"Effect identifier for manual cancellation via "},{"type":"codeVoice","code":"Effect.cancel"},{"type":"text","text":"."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectID"}],"url":"\/documentation\/actomaton\/effectid"},"doc://Actomaton/documentation/Actomaton/Oldest1DiscardNewEffectQueueProtocol":{"role":"symbol","title":"Oldest1DiscardNewEffectQueueProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Oldest1DiscardNewEffectQueueProtocol"}],"abstract":[{"type":"text","text":"A helper protocol where "},{"type":"codeVoice","code":"effectQueuePolicy"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":".runOldest(maxCount: 1, .discardNew)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Oldest1DiscardNewEffectQueueProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Oldest1DiscardNewEffectQueueProtocol"}],"url":"\/documentation\/actomaton\/oldest1discardneweffectqueueprotocol"},"doc://Actomaton/documentation/Actomaton":{"role":"collection","title":"Actomaton","abstract":[{"type":"text","text":"Swift "},{"type":"codeVoice","code":"async"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"await"},{"type":"text","text":" & "},{"type":"codeVoice","code":"Actor"},{"type":"text","text":"-powered effectful state-management framework."},{"type":"text","text":" "},{"type":"text","text":"Linux ready."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton","kind":"symbol","type":"topic","url":"\/documentation\/actomaton"},"doc://Actomaton/documentation/Actomaton/EffectQueueProtocol":{"role":"symbol","title":"EffectQueueProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectQueueProtocol"}],"abstract":[{"type":"text","text":"A protocol that every effect queue should conform to, for automatic cancellation of existing tasks or suspending of new effects."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueueProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectQueueProtocol"}],"url":"\/documentation\/actomaton\/effectqueueprotocol"},"doc://Actomaton/documentation/Actomaton/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"Effect type to run "},{"type":"codeVoice","code":"async"},{"type":"text","text":", "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":", or cancellation."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/actomaton\/effect"},"doc://Actomaton/documentation/Actomaton/Newest1EffectQueueProtocol":{"role":"symbol","title":"Newest1EffectQueueProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newest1EffectQueueProtocol"}],"abstract":[{"type":"text","text":"A helper protocol where "},{"type":"codeVoice","code":"effectQueuePolicy"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":".runNewest(maxCount: 1)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Newest1EffectQueueProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Newest1EffectQueueProtocol"}],"url":"\/documentation\/actomaton\/newest1effectqueueprotocol"},"doc://Actomaton/documentation/Actomaton/05-ReducerComposition":{"role":"article","title":"Example 5: Making a large app (Reducer Composition)","abstract":[{"type":"text","text":"Reducer composition example."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/05-ReducerComposition","kind":"article","type":"topic","url":"\/documentation\/actomaton\/05-reducercomposition"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"swift-composable-architecture","titleInlineContent":[{"type":"text","text":"swift-composable-architecture"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"https://github.com/Actomaton/Actomaton-Gallery":{"title":"Actomaton-Gallery","titleInlineContent":[{"type":"text","text":"Actomaton-Gallery"}],"type":"link","identifier":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery","url":"https:\/\/github.com\/Actomaton\/Actomaton-Gallery"},"doc://Actomaton/documentation/Actomaton/Oldest1SuspendNewEffectQueueProtocol":{"role":"symbol","title":"Oldest1SuspendNewEffectQueueProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Oldest1SuspendNewEffectQueueProtocol"}],"abstract":[{"type":"text","text":"A helper protocol where "},{"type":"codeVoice","code":"effectQueuePolicy"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":".runOldest(maxCount: 1, .suspendNew)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Oldest1SuspendNewEffectQueueProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Oldest1SuspendNewEffectQueueProtocol"}],"url":"\/documentation\/actomaton\/oldest1suspendneweffectqueueprotocol"},"doc://Actomaton/documentation/Actomaton/04-EffectQueue":{"role":"article","title":"Example 4: EffectQueue","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueue"},{"type":"text","text":" example."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/04-EffectQueue","kind":"article","type":"topic","url":"\/documentation\/actomaton\/04-effectqueue"},"doc://Actomaton/documentation/Actomaton/EffectIDProtocol":{"role":"symbol","title":"EffectIDProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectIDProtocol"}],"abstract":[{"type":"text","text":"A protocol that every effect-identifier should conform to."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectIDProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectIDProtocol"}],"url":"\/documentation\/actomaton\/effectidprotocol"},"doc://Actomaton/documentation/Actomaton/EffectQueuePolicy":{"role":"symbol","title":"EffectQueuePolicy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectQueuePolicy"}],"abstract":[{"type":"codeVoice","code":"EffectQueueProtocol"},{"type":"text","text":"’s buffering policy."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueuePolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectQueuePolicy"}],"url":"\/documentation\/actomaton\/effectqueuepolicy"},"doc://Actomaton/documentation/Actomaton/03-Timer":{"role":"article","title":"Example 3: Timer","abstract":[{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":"-based timer example."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/03-Timer","kind":"article","type":"topic","url":"\/documentation\/actomaton\/03-timer"},"doc://Actomaton/documentation/Actomaton/01-Counter":{"role":"article","title":"Example 1: Simple Counter","abstract":[{"type":"text","text":"Simple "},{"type":"codeVoice","code":"increment"},{"type":"text","text":" and "},{"type":"codeVoice","code":"decrement"},{"type":"text","text":" counter example."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/01-Counter","kind":"article","type":"topic","url":"\/documentation\/actomaton\/01-counter"},"doc://Actomaton/documentation/Actomaton/EffectQueueDelay":{"role":"symbol","title":"EffectQueueDelay","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectQueueDelay"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueueProtocol"},{"type":"text","text":"’s  delaying strategy."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueueDelay","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectQueueDelay"}],"url":"\/documentation\/actomaton\/effectqueuedelay"},"doc://Actomaton/documentation/Actomaton/EffectQueue":{"role":"symbol","title":"EffectQueue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectQueue"}],"abstract":[{"type":"text","text":"Effect queue for automatic cancellation of existing tasks or suspending of new effects."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/EffectQueue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectQueue"}],"url":"\/documentation\/actomaton\/effectqueue"},"doc://Actomaton/documentation/Actomaton/MainActomaton":{"role":"symbol","title":"MainActomaton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainActomaton"}],"abstract":[{"type":"text","text":"Actor + Automaton = Actomaton."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/MainActomaton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainActomaton"}],"url":"\/documentation\/actomaton\/mainactomaton"},"doc://Actomaton/documentation/Actomaton/Actomaton":{"role":"symbol","title":"Actomaton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Actomaton"}],"abstract":[{"type":"text","text":"Actor + Automaton = Actomaton."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Actomaton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Actomaton"}],"url":"\/documentation\/actomaton\/actomaton"},"doc://Actomaton/documentation/Actomaton/Examples":{"role":"article","title":"Example Code","abstract":[{"type":"text","text":"Quick example code to grasp how Actomaton architecture works."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Examples","kind":"article","type":"topic","url":"\/documentation\/actomaton\/examples"},"doc://Actomaton/documentation/Actomaton/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A composable, "},{"type":"codeVoice","code":"State"},{"type":"text","text":"-transforming function wrapper that is triggered by "},{"type":"codeVoice","code":"Action"},{"type":"text","text":"."}],"identifier":"doc:\/\/Actomaton\/documentation\/Actomaton\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/actomaton\/reducer"}}}